schema {
  query: query
  mutation: mutation
}

input BetweenOperatorID {
  from: ID!
  to: ID!
  not: Boolean = false
}

input EqualOperatorID {
  value: ID!
  not: Boolean = false
}

input GreaterOperatorID {
  value: ID!
  not: Boolean = false
}

input GreaterOrEqualOperatorID {
  value: ID!
  not: Boolean = false
}

input InOperatorID {
  values: [ID!]!
  not: Boolean = false
}

input LessOperatorID {
  value: ID!
  not: Boolean = false
}

input LessOrEqualOperatorID {
  value: ID!
  not: Boolean = false
}

input LikeOperatorID {
  value: ID!
  not: Boolean = false
}

# Logical operator to be used in conditions
enum LogicalOperator {
  AND
  OR
}

# To be used as a filter for objects of type `ModelWithTraits`
input ModelWithTraitsFilter {
  # Optional joins to either filter the query or fetch related objects from DB in a single query
  joins: ModelWithTraitsFilterJoins
  conditions: [ModelWithTraitsFilterCondition!]
}

# Type to specify conditions to filter `ModelWithTraits`
input ModelWithTraitsFilterCondition {
  # The logic operator to be used to append this condition
  conditionLogic: LogicalOperator = AND

  # The logic operator to be used within all fields below
  fieldsLogic: LogicalOperator = AND

  # Fields on which we want to apply a condition
  fields: [ModelWithTraitsFilterConditionFields!]
}

# Type to specify a condition on a specific field
input ModelWithTraitsFilterConditionFieldCustomFromTrait {
  search: SearchOperatorString
}

# Type to specify a condition on a specific field
input ModelWithTraitsFilterConditionFieldId {
  between: BetweenOperatorID
  equal: EqualOperatorID
  greater: GreaterOperatorID
  greaterOrEqual: GreaterOrEqualOperatorID
  in: InOperatorID
  less: LessOperatorID
  lessOrEqual: LessOrEqualOperatorID
  like: LikeOperatorID
  null: NullOperatorID
}

# Type to specify conditions on fields
input ModelWithTraitsFilterConditionFields {
  id: ModelWithTraitsFilterConditionFieldId
  customFromTrait: ModelWithTraitsFilterConditionFieldCustomFromTrait
}

# Type to specify join tables in a filter
input ModelWithTraitsFilterJoins {

}

input NullOperatorID {
  not: Boolean = false
}

input SearchOperatorString {
  term: String!
}

type mutation {
  defaultField: ModelWithTraitsFilter
}

type query {

}
