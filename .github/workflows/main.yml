name: main
on: [ push, pull_request ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'

    name: PHP ${{ matrix.php-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/composer
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Remove lock for PHP 8
        if: matrix.php-version == '8.0'
        run: rm composer.lock

      - name: Install dependencies
        run: composer install

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Test with PHPUnit
        run: ./vendor/bin/phpunit

  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none
          tools: cs2pr

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/composer
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Code style with PHP-CS-Fixer
        run: ./vendor/bin/php-cs-fixer fix --format=checkstyle | cs2pr

  phpstan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/composer
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Static analysis with PHPStan
        run: ./vendor/bin/phpstan analyse

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: pcov

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/composer
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Code coverage
        run: ./vendor/bin/phpunit --coverage-clover coverage-clover.xml

      - name: Upload code coverage
        run: |
          curl -LO https://scrutinizer-ci.com/ocular.phar
          php ocular.phar code-coverage:upload --format=php-clover coverage-clover.xml

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }} # Otherwise our annotated tag is not fetched and we cannot get correct version

      # Create release
      - name: Get release info
        id: release-info
        run: |
          echo "::set-output name=subject::$(git tag --format '%(contents:subject)' --points-at)"
          git tag --format '%(contents:body)' --points-at > release-body.txt
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.release-info.outputs.subject }}
          body_path: release-body.txt
